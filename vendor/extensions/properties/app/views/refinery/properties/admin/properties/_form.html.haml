= semantic_form_for [refinery, :properties_admin, @property] do |f|
  = render '/refinery/admin/error_messages', :object => @property, :include_object_name => true

  = f.inputs do
    = f.input :headline, :input_html => {:class => 'larger widest'}

  = tabbed_fieldsets f, [ |
    :description, |
    :potential_uses, |
    Refinery::Pages::Tab.new(:name => 'map', :partial => '/refinery/locations/admin/locations/map'), |
    Refinery::Pages::Tab.new(:name => 'images', :partial => '/refinery/admin/pages/tabs/images') |
  ] |
  / = f.fields_for(:location, f.object.location || f.object.build_location) do |location_form|
  /   = tabbed_fieldsets location_form, [Refinery::Pages::Tab.new(:name => 'map', :partial => '/refinery/locations/admin/locations/map')]

  = f.inputs do
    = f.input :availability_status, :collection => Refinery::Properties::Property::AVAILABILITY_STATES
    = f.input :lot_number
    = f.input :street_address
    = f.input :total_price
    = f.input :land_area_sqm

  = render '/refinery/admin/form_actions', :f => f,
	 :continue_editing => false,
	 :delete_title => t('delete', :scope => 'refinery.properties.admin.properties.property'),
	 :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @property.lot_number)

- content_for :javascripts do
  :javascript
    $(document).ready(function(){
      page_options.init(false, '', '');
    });
